
Wheel_speed_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000492  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000506  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800060  00800060  00000506  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000506  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000538  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000574  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000005f8  00000000  00000000  000005a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000556  00000000  00000000  00000b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000230  00000000  00000000  000010f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  00001324  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000030e  00000000  00000000  000013b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000e9  00000000  00000000  000016be  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000017a7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 42 00 	jmp	0x84	; 0x84 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a8 36       	cpi	r26, 0x68	; 104
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 9e 00 	call	0x13c	; 0x13c <main>
  74:	0c 94 47 02 	jmp	0x48e	; 0x48e <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <PWM_init>:
#include <util/delay.h>
#include <avr/interrupt.h>
double time1=0.0; double duty = 0.0;
void PWM_init()
{
	TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS00);
  7c:	89 e6       	ldi	r24, 0x69	; 105
  7e:	83 bf       	out	0x33, r24	; 51
	//TCCR0 = (1<<WGM00) | (1<<COM01) | (1<<CS00);
	DDRB|=(1<<PB3);
  80:	bb 9a       	sbi	0x17, 3	; 23
  82:	08 95       	ret

00000084 <__vector_1>:
}
ISR(INT0_vect)
{
  84:	1f 92       	push	r1
  86:	0f 92       	push	r0
  88:	0f b6       	in	r0, 0x3f	; 63
  8a:	0f 92       	push	r0
  8c:	11 24       	eor	r1, r1
  8e:	2f 93       	push	r18
  90:	3f 93       	push	r19
  92:	4f 93       	push	r20
  94:	5f 93       	push	r21
  96:	6f 93       	push	r22
  98:	7f 93       	push	r23
  9a:	8f 93       	push	r24
  9c:	9f 93       	push	r25
  9e:	af 93       	push	r26
  a0:	bf 93       	push	r27
  a2:	ef 93       	push	r30
  a4:	ff 93       	push	r31
		TCCR1B&=~((1<<CS10)|(1<<CS12)|(1<<CS11));
  a6:	8e b5       	in	r24, 0x2e	; 46
  a8:	88 7f       	andi	r24, 0xF8	; 248
  aa:	8e bd       	out	0x2e, r24	; 46
		//time1 = TCNT1*(0.000001)*1024;
		time1 = TCNT1*(0.000001);
  ac:	6c b5       	in	r22, 0x2c	; 44
  ae:	7d b5       	in	r23, 0x2d	; 45
  b0:	80 e0       	ldi	r24, 0x00	; 0
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 4c 01 	call	0x298	; 0x298 <__floatunsisf>
  b8:	2d eb       	ldi	r18, 0xBD	; 189
  ba:	37 e3       	ldi	r19, 0x37	; 55
  bc:	46 e8       	ldi	r20, 0x86	; 134
  be:	55 e3       	ldi	r21, 0x35	; 53
  c0:	0e 94 da 01 	call	0x3b4	; 0x3b4 <__mulsf3>
  c4:	9b 01       	movw	r18, r22
  c6:	ac 01       	movw	r20, r24
  c8:	60 93 64 00 	sts	0x0064, r22	; 0x800064 <time1>
  cc:	70 93 65 00 	sts	0x0065, r23	; 0x800065 <time1+0x1>
  d0:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <time1+0x2>
  d4:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <time1+0x3>
		double rpm = 60.0/time1;
		duty = (rpm*255)/2000;
  d8:	60 e0       	ldi	r22, 0x00	; 0
  da:	70 e0       	ldi	r23, 0x00	; 0
  dc:	80 e7       	ldi	r24, 0x70	; 112
  de:	92 e4       	ldi	r25, 0x42	; 66
  e0:	0e 94 ab 00 	call	0x156	; 0x156 <__divsf3>
  e4:	20 e0       	ldi	r18, 0x00	; 0
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	4f e7       	ldi	r20, 0x7F	; 127
  ea:	53 e4       	ldi	r21, 0x43	; 67
  ec:	0e 94 da 01 	call	0x3b4	; 0x3b4 <__mulsf3>
  f0:	20 e0       	ldi	r18, 0x00	; 0
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	4a ef       	ldi	r20, 0xFA	; 250
  f6:	54 e4       	ldi	r21, 0x44	; 68
  f8:	0e 94 ab 00 	call	0x156	; 0x156 <__divsf3>
  fc:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
 100:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 104:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 108:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
		OCR0 = duty;
 10c:	0e 94 1d 01 	call	0x23a	; 0x23a <__fixunssfsi>
 110:	6c bf       	out	0x3c, r22	; 60
		TCNT1 = 0x00;
 112:	1d bc       	out	0x2d, r1	; 45
 114:	1c bc       	out	0x2c, r1	; 44
		TCCR1B = (1<<CS10);
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	8e bd       	out	0x2e, r24	; 46
		//TCCR1B|=(1<<CS10)|(1<<CS12);
		//serial_avr(duty);
}
 11a:	ff 91       	pop	r31
 11c:	ef 91       	pop	r30
 11e:	bf 91       	pop	r27
 120:	af 91       	pop	r26
 122:	9f 91       	pop	r25
 124:	8f 91       	pop	r24
 126:	7f 91       	pop	r23
 128:	6f 91       	pop	r22
 12a:	5f 91       	pop	r21
 12c:	4f 91       	pop	r20
 12e:	3f 91       	pop	r19
 130:	2f 91       	pop	r18
 132:	0f 90       	pop	r0
 134:	0f be       	out	0x3f, r0	; 63
 136:	0f 90       	pop	r0
 138:	1f 90       	pop	r1
 13a:	18 95       	reti

0000013c <main>:
int main(void)
{
	PWM_init();
 13c:	0e 94 3e 00 	call	0x7c	; 0x7c <PWM_init>
	TCNT1 = 0x00;
 140:	1d bc       	out	0x2d, r1	; 45
 142:	1c bc       	out	0x2c, r1	; 44
	//TCCR1B = (1<<CS10)|(1<<CS12);
	TCCR1B = (1<<CS10);
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	8e bd       	out	0x2e, r24	; 46
    /* Replace with your application code */
	DDRD=0;
 148:	11 ba       	out	0x11, r1	; 17
	GICR = 1<<INT0;		/* Enable INT0*/
 14a:	80 e4       	ldi	r24, 0x40	; 64
 14c:	8b bf       	out	0x3b, r24	; 59
	MCUCR = 1<<ISC01 | 1<<ISC00;  /* Trigger INT0 on rising edge */	
 14e:	83 e0       	ldi	r24, 0x03	; 3
 150:	85 bf       	out	0x35, r24	; 53
	sei();
 152:	78 94       	sei
 154:	ff cf       	rjmp	.-2      	; 0x154 <main+0x18>

00000156 <__divsf3>:
 156:	0e 94 bf 00 	call	0x17e	; 0x17e <__divsf3x>
 15a:	0c 94 a0 01 	jmp	0x340	; 0x340 <__fp_round>
 15e:	0e 94 99 01 	call	0x332	; 0x332 <__fp_pscB>
 162:	58 f0       	brcs	.+22     	; 0x17a <__divsf3+0x24>
 164:	0e 94 92 01 	call	0x324	; 0x324 <__fp_pscA>
 168:	40 f0       	brcs	.+16     	; 0x17a <__divsf3+0x24>
 16a:	29 f4       	brne	.+10     	; 0x176 <__divsf3+0x20>
 16c:	5f 3f       	cpi	r21, 0xFF	; 255
 16e:	29 f0       	breq	.+10     	; 0x17a <__divsf3+0x24>
 170:	0c 94 89 01 	jmp	0x312	; 0x312 <__fp_inf>
 174:	51 11       	cpse	r21, r1
 176:	0c 94 d4 01 	jmp	0x3a8	; 0x3a8 <__fp_szero>
 17a:	0c 94 8f 01 	jmp	0x31e	; 0x31e <__fp_nan>

0000017e <__divsf3x>:
 17e:	0e 94 b1 01 	call	0x362	; 0x362 <__fp_split3>
 182:	68 f3       	brcs	.-38     	; 0x15e <__divsf3+0x8>

00000184 <__divsf3_pse>:
 184:	99 23       	and	r25, r25
 186:	b1 f3       	breq	.-20     	; 0x174 <__divsf3+0x1e>
 188:	55 23       	and	r21, r21
 18a:	91 f3       	breq	.-28     	; 0x170 <__divsf3+0x1a>
 18c:	95 1b       	sub	r25, r21
 18e:	55 0b       	sbc	r21, r21
 190:	bb 27       	eor	r27, r27
 192:	aa 27       	eor	r26, r26
 194:	62 17       	cp	r22, r18
 196:	73 07       	cpc	r23, r19
 198:	84 07       	cpc	r24, r20
 19a:	38 f0       	brcs	.+14     	; 0x1aa <__divsf3_pse+0x26>
 19c:	9f 5f       	subi	r25, 0xFF	; 255
 19e:	5f 4f       	sbci	r21, 0xFF	; 255
 1a0:	22 0f       	add	r18, r18
 1a2:	33 1f       	adc	r19, r19
 1a4:	44 1f       	adc	r20, r20
 1a6:	aa 1f       	adc	r26, r26
 1a8:	a9 f3       	breq	.-22     	; 0x194 <__divsf3_pse+0x10>
 1aa:	35 d0       	rcall	.+106    	; 0x216 <__divsf3_pse+0x92>
 1ac:	0e 2e       	mov	r0, r30
 1ae:	3a f0       	brmi	.+14     	; 0x1be <__divsf3_pse+0x3a>
 1b0:	e0 e8       	ldi	r30, 0x80	; 128
 1b2:	32 d0       	rcall	.+100    	; 0x218 <__divsf3_pse+0x94>
 1b4:	91 50       	subi	r25, 0x01	; 1
 1b6:	50 40       	sbci	r21, 0x00	; 0
 1b8:	e6 95       	lsr	r30
 1ba:	00 1c       	adc	r0, r0
 1bc:	ca f7       	brpl	.-14     	; 0x1b0 <__divsf3_pse+0x2c>
 1be:	2b d0       	rcall	.+86     	; 0x216 <__divsf3_pse+0x92>
 1c0:	fe 2f       	mov	r31, r30
 1c2:	29 d0       	rcall	.+82     	; 0x216 <__divsf3_pse+0x92>
 1c4:	66 0f       	add	r22, r22
 1c6:	77 1f       	adc	r23, r23
 1c8:	88 1f       	adc	r24, r24
 1ca:	bb 1f       	adc	r27, r27
 1cc:	26 17       	cp	r18, r22
 1ce:	37 07       	cpc	r19, r23
 1d0:	48 07       	cpc	r20, r24
 1d2:	ab 07       	cpc	r26, r27
 1d4:	b0 e8       	ldi	r27, 0x80	; 128
 1d6:	09 f0       	breq	.+2      	; 0x1da <__divsf3_pse+0x56>
 1d8:	bb 0b       	sbc	r27, r27
 1da:	80 2d       	mov	r24, r0
 1dc:	bf 01       	movw	r22, r30
 1de:	ff 27       	eor	r31, r31
 1e0:	93 58       	subi	r25, 0x83	; 131
 1e2:	5f 4f       	sbci	r21, 0xFF	; 255
 1e4:	3a f0       	brmi	.+14     	; 0x1f4 <__divsf3_pse+0x70>
 1e6:	9e 3f       	cpi	r25, 0xFE	; 254
 1e8:	51 05       	cpc	r21, r1
 1ea:	78 f0       	brcs	.+30     	; 0x20a <__divsf3_pse+0x86>
 1ec:	0c 94 89 01 	jmp	0x312	; 0x312 <__fp_inf>
 1f0:	0c 94 d4 01 	jmp	0x3a8	; 0x3a8 <__fp_szero>
 1f4:	5f 3f       	cpi	r21, 0xFF	; 255
 1f6:	e4 f3       	brlt	.-8      	; 0x1f0 <__divsf3_pse+0x6c>
 1f8:	98 3e       	cpi	r25, 0xE8	; 232
 1fa:	d4 f3       	brlt	.-12     	; 0x1f0 <__divsf3_pse+0x6c>
 1fc:	86 95       	lsr	r24
 1fe:	77 95       	ror	r23
 200:	67 95       	ror	r22
 202:	b7 95       	ror	r27
 204:	f7 95       	ror	r31
 206:	9f 5f       	subi	r25, 0xFF	; 255
 208:	c9 f7       	brne	.-14     	; 0x1fc <__divsf3_pse+0x78>
 20a:	88 0f       	add	r24, r24
 20c:	91 1d       	adc	r25, r1
 20e:	96 95       	lsr	r25
 210:	87 95       	ror	r24
 212:	97 f9       	bld	r25, 7
 214:	08 95       	ret
 216:	e1 e0       	ldi	r30, 0x01	; 1
 218:	66 0f       	add	r22, r22
 21a:	77 1f       	adc	r23, r23
 21c:	88 1f       	adc	r24, r24
 21e:	bb 1f       	adc	r27, r27
 220:	62 17       	cp	r22, r18
 222:	73 07       	cpc	r23, r19
 224:	84 07       	cpc	r24, r20
 226:	ba 07       	cpc	r27, r26
 228:	20 f0       	brcs	.+8      	; 0x232 <__divsf3_pse+0xae>
 22a:	62 1b       	sub	r22, r18
 22c:	73 0b       	sbc	r23, r19
 22e:	84 0b       	sbc	r24, r20
 230:	ba 0b       	sbc	r27, r26
 232:	ee 1f       	adc	r30, r30
 234:	88 f7       	brcc	.-30     	; 0x218 <__divsf3_pse+0x94>
 236:	e0 95       	com	r30
 238:	08 95       	ret

0000023a <__fixunssfsi>:
 23a:	0e 94 b9 01 	call	0x372	; 0x372 <__fp_splitA>
 23e:	88 f0       	brcs	.+34     	; 0x262 <__fixunssfsi+0x28>
 240:	9f 57       	subi	r25, 0x7F	; 127
 242:	98 f0       	brcs	.+38     	; 0x26a <__fixunssfsi+0x30>
 244:	b9 2f       	mov	r27, r25
 246:	99 27       	eor	r25, r25
 248:	b7 51       	subi	r27, 0x17	; 23
 24a:	b0 f0       	brcs	.+44     	; 0x278 <__fixunssfsi+0x3e>
 24c:	e1 f0       	breq	.+56     	; 0x286 <__fixunssfsi+0x4c>
 24e:	66 0f       	add	r22, r22
 250:	77 1f       	adc	r23, r23
 252:	88 1f       	adc	r24, r24
 254:	99 1f       	adc	r25, r25
 256:	1a f0       	brmi	.+6      	; 0x25e <__fixunssfsi+0x24>
 258:	ba 95       	dec	r27
 25a:	c9 f7       	brne	.-14     	; 0x24e <__fixunssfsi+0x14>
 25c:	14 c0       	rjmp	.+40     	; 0x286 <__fixunssfsi+0x4c>
 25e:	b1 30       	cpi	r27, 0x01	; 1
 260:	91 f0       	breq	.+36     	; 0x286 <__fixunssfsi+0x4c>
 262:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__fp_zero>
 266:	b1 e0       	ldi	r27, 0x01	; 1
 268:	08 95       	ret
 26a:	0c 94 d3 01 	jmp	0x3a6	; 0x3a6 <__fp_zero>
 26e:	67 2f       	mov	r22, r23
 270:	78 2f       	mov	r23, r24
 272:	88 27       	eor	r24, r24
 274:	b8 5f       	subi	r27, 0xF8	; 248
 276:	39 f0       	breq	.+14     	; 0x286 <__fixunssfsi+0x4c>
 278:	b9 3f       	cpi	r27, 0xF9	; 249
 27a:	cc f3       	brlt	.-14     	; 0x26e <__fixunssfsi+0x34>
 27c:	86 95       	lsr	r24
 27e:	77 95       	ror	r23
 280:	67 95       	ror	r22
 282:	b3 95       	inc	r27
 284:	d9 f7       	brne	.-10     	; 0x27c <__fixunssfsi+0x42>
 286:	3e f4       	brtc	.+14     	; 0x296 <__fixunssfsi+0x5c>
 288:	90 95       	com	r25
 28a:	80 95       	com	r24
 28c:	70 95       	com	r23
 28e:	61 95       	neg	r22
 290:	7f 4f       	sbci	r23, 0xFF	; 255
 292:	8f 4f       	sbci	r24, 0xFF	; 255
 294:	9f 4f       	sbci	r25, 0xFF	; 255
 296:	08 95       	ret

00000298 <__floatunsisf>:
 298:	e8 94       	clt
 29a:	09 c0       	rjmp	.+18     	; 0x2ae <__floatsisf+0x12>

0000029c <__floatsisf>:
 29c:	97 fb       	bst	r25, 7
 29e:	3e f4       	brtc	.+14     	; 0x2ae <__floatsisf+0x12>
 2a0:	90 95       	com	r25
 2a2:	80 95       	com	r24
 2a4:	70 95       	com	r23
 2a6:	61 95       	neg	r22
 2a8:	7f 4f       	sbci	r23, 0xFF	; 255
 2aa:	8f 4f       	sbci	r24, 0xFF	; 255
 2ac:	9f 4f       	sbci	r25, 0xFF	; 255
 2ae:	99 23       	and	r25, r25
 2b0:	a9 f0       	breq	.+42     	; 0x2dc <__floatsisf+0x40>
 2b2:	f9 2f       	mov	r31, r25
 2b4:	96 e9       	ldi	r25, 0x96	; 150
 2b6:	bb 27       	eor	r27, r27
 2b8:	93 95       	inc	r25
 2ba:	f6 95       	lsr	r31
 2bc:	87 95       	ror	r24
 2be:	77 95       	ror	r23
 2c0:	67 95       	ror	r22
 2c2:	b7 95       	ror	r27
 2c4:	f1 11       	cpse	r31, r1
 2c6:	f8 cf       	rjmp	.-16     	; 0x2b8 <__floatsisf+0x1c>
 2c8:	fa f4       	brpl	.+62     	; 0x308 <__floatsisf+0x6c>
 2ca:	bb 0f       	add	r27, r27
 2cc:	11 f4       	brne	.+4      	; 0x2d2 <__floatsisf+0x36>
 2ce:	60 ff       	sbrs	r22, 0
 2d0:	1b c0       	rjmp	.+54     	; 0x308 <__floatsisf+0x6c>
 2d2:	6f 5f       	subi	r22, 0xFF	; 255
 2d4:	7f 4f       	sbci	r23, 0xFF	; 255
 2d6:	8f 4f       	sbci	r24, 0xFF	; 255
 2d8:	9f 4f       	sbci	r25, 0xFF	; 255
 2da:	16 c0       	rjmp	.+44     	; 0x308 <__floatsisf+0x6c>
 2dc:	88 23       	and	r24, r24
 2de:	11 f0       	breq	.+4      	; 0x2e4 <__floatsisf+0x48>
 2e0:	96 e9       	ldi	r25, 0x96	; 150
 2e2:	11 c0       	rjmp	.+34     	; 0x306 <__floatsisf+0x6a>
 2e4:	77 23       	and	r23, r23
 2e6:	21 f0       	breq	.+8      	; 0x2f0 <__floatsisf+0x54>
 2e8:	9e e8       	ldi	r25, 0x8E	; 142
 2ea:	87 2f       	mov	r24, r23
 2ec:	76 2f       	mov	r23, r22
 2ee:	05 c0       	rjmp	.+10     	; 0x2fa <__floatsisf+0x5e>
 2f0:	66 23       	and	r22, r22
 2f2:	71 f0       	breq	.+28     	; 0x310 <__floatsisf+0x74>
 2f4:	96 e8       	ldi	r25, 0x86	; 134
 2f6:	86 2f       	mov	r24, r22
 2f8:	70 e0       	ldi	r23, 0x00	; 0
 2fa:	60 e0       	ldi	r22, 0x00	; 0
 2fc:	2a f0       	brmi	.+10     	; 0x308 <__floatsisf+0x6c>
 2fe:	9a 95       	dec	r25
 300:	66 0f       	add	r22, r22
 302:	77 1f       	adc	r23, r23
 304:	88 1f       	adc	r24, r24
 306:	da f7       	brpl	.-10     	; 0x2fe <__floatsisf+0x62>
 308:	88 0f       	add	r24, r24
 30a:	96 95       	lsr	r25
 30c:	87 95       	ror	r24
 30e:	97 f9       	bld	r25, 7
 310:	08 95       	ret

00000312 <__fp_inf>:
 312:	97 f9       	bld	r25, 7
 314:	9f 67       	ori	r25, 0x7F	; 127
 316:	80 e8       	ldi	r24, 0x80	; 128
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	60 e0       	ldi	r22, 0x00	; 0
 31c:	08 95       	ret

0000031e <__fp_nan>:
 31e:	9f ef       	ldi	r25, 0xFF	; 255
 320:	80 ec       	ldi	r24, 0xC0	; 192
 322:	08 95       	ret

00000324 <__fp_pscA>:
 324:	00 24       	eor	r0, r0
 326:	0a 94       	dec	r0
 328:	16 16       	cp	r1, r22
 32a:	17 06       	cpc	r1, r23
 32c:	18 06       	cpc	r1, r24
 32e:	09 06       	cpc	r0, r25
 330:	08 95       	ret

00000332 <__fp_pscB>:
 332:	00 24       	eor	r0, r0
 334:	0a 94       	dec	r0
 336:	12 16       	cp	r1, r18
 338:	13 06       	cpc	r1, r19
 33a:	14 06       	cpc	r1, r20
 33c:	05 06       	cpc	r0, r21
 33e:	08 95       	ret

00000340 <__fp_round>:
 340:	09 2e       	mov	r0, r25
 342:	03 94       	inc	r0
 344:	00 0c       	add	r0, r0
 346:	11 f4       	brne	.+4      	; 0x34c <__fp_round+0xc>
 348:	88 23       	and	r24, r24
 34a:	52 f0       	brmi	.+20     	; 0x360 <__fp_round+0x20>
 34c:	bb 0f       	add	r27, r27
 34e:	40 f4       	brcc	.+16     	; 0x360 <__fp_round+0x20>
 350:	bf 2b       	or	r27, r31
 352:	11 f4       	brne	.+4      	; 0x358 <__fp_round+0x18>
 354:	60 ff       	sbrs	r22, 0
 356:	04 c0       	rjmp	.+8      	; 0x360 <__fp_round+0x20>
 358:	6f 5f       	subi	r22, 0xFF	; 255
 35a:	7f 4f       	sbci	r23, 0xFF	; 255
 35c:	8f 4f       	sbci	r24, 0xFF	; 255
 35e:	9f 4f       	sbci	r25, 0xFF	; 255
 360:	08 95       	ret

00000362 <__fp_split3>:
 362:	57 fd       	sbrc	r21, 7
 364:	90 58       	subi	r25, 0x80	; 128
 366:	44 0f       	add	r20, r20
 368:	55 1f       	adc	r21, r21
 36a:	59 f0       	breq	.+22     	; 0x382 <__fp_splitA+0x10>
 36c:	5f 3f       	cpi	r21, 0xFF	; 255
 36e:	71 f0       	breq	.+28     	; 0x38c <__fp_splitA+0x1a>
 370:	47 95       	ror	r20

00000372 <__fp_splitA>:
 372:	88 0f       	add	r24, r24
 374:	97 fb       	bst	r25, 7
 376:	99 1f       	adc	r25, r25
 378:	61 f0       	breq	.+24     	; 0x392 <__fp_splitA+0x20>
 37a:	9f 3f       	cpi	r25, 0xFF	; 255
 37c:	79 f0       	breq	.+30     	; 0x39c <__fp_splitA+0x2a>
 37e:	87 95       	ror	r24
 380:	08 95       	ret
 382:	12 16       	cp	r1, r18
 384:	13 06       	cpc	r1, r19
 386:	14 06       	cpc	r1, r20
 388:	55 1f       	adc	r21, r21
 38a:	f2 cf       	rjmp	.-28     	; 0x370 <__fp_split3+0xe>
 38c:	46 95       	lsr	r20
 38e:	f1 df       	rcall	.-30     	; 0x372 <__fp_splitA>
 390:	08 c0       	rjmp	.+16     	; 0x3a2 <__fp_splitA+0x30>
 392:	16 16       	cp	r1, r22
 394:	17 06       	cpc	r1, r23
 396:	18 06       	cpc	r1, r24
 398:	99 1f       	adc	r25, r25
 39a:	f1 cf       	rjmp	.-30     	; 0x37e <__fp_splitA+0xc>
 39c:	86 95       	lsr	r24
 39e:	71 05       	cpc	r23, r1
 3a0:	61 05       	cpc	r22, r1
 3a2:	08 94       	sec
 3a4:	08 95       	ret

000003a6 <__fp_zero>:
 3a6:	e8 94       	clt

000003a8 <__fp_szero>:
 3a8:	bb 27       	eor	r27, r27
 3aa:	66 27       	eor	r22, r22
 3ac:	77 27       	eor	r23, r23
 3ae:	cb 01       	movw	r24, r22
 3b0:	97 f9       	bld	r25, 7
 3b2:	08 95       	ret

000003b4 <__mulsf3>:
 3b4:	0e 94 ed 01 	call	0x3da	; 0x3da <__mulsf3x>
 3b8:	0c 94 a0 01 	jmp	0x340	; 0x340 <__fp_round>
 3bc:	0e 94 92 01 	call	0x324	; 0x324 <__fp_pscA>
 3c0:	38 f0       	brcs	.+14     	; 0x3d0 <__mulsf3+0x1c>
 3c2:	0e 94 99 01 	call	0x332	; 0x332 <__fp_pscB>
 3c6:	20 f0       	brcs	.+8      	; 0x3d0 <__mulsf3+0x1c>
 3c8:	95 23       	and	r25, r21
 3ca:	11 f0       	breq	.+4      	; 0x3d0 <__mulsf3+0x1c>
 3cc:	0c 94 89 01 	jmp	0x312	; 0x312 <__fp_inf>
 3d0:	0c 94 8f 01 	jmp	0x31e	; 0x31e <__fp_nan>
 3d4:	11 24       	eor	r1, r1
 3d6:	0c 94 d4 01 	jmp	0x3a8	; 0x3a8 <__fp_szero>

000003da <__mulsf3x>:
 3da:	0e 94 b1 01 	call	0x362	; 0x362 <__fp_split3>
 3de:	70 f3       	brcs	.-36     	; 0x3bc <__mulsf3+0x8>

000003e0 <__mulsf3_pse>:
 3e0:	95 9f       	mul	r25, r21
 3e2:	c1 f3       	breq	.-16     	; 0x3d4 <__mulsf3+0x20>
 3e4:	95 0f       	add	r25, r21
 3e6:	50 e0       	ldi	r21, 0x00	; 0
 3e8:	55 1f       	adc	r21, r21
 3ea:	62 9f       	mul	r22, r18
 3ec:	f0 01       	movw	r30, r0
 3ee:	72 9f       	mul	r23, r18
 3f0:	bb 27       	eor	r27, r27
 3f2:	f0 0d       	add	r31, r0
 3f4:	b1 1d       	adc	r27, r1
 3f6:	63 9f       	mul	r22, r19
 3f8:	aa 27       	eor	r26, r26
 3fa:	f0 0d       	add	r31, r0
 3fc:	b1 1d       	adc	r27, r1
 3fe:	aa 1f       	adc	r26, r26
 400:	64 9f       	mul	r22, r20
 402:	66 27       	eor	r22, r22
 404:	b0 0d       	add	r27, r0
 406:	a1 1d       	adc	r26, r1
 408:	66 1f       	adc	r22, r22
 40a:	82 9f       	mul	r24, r18
 40c:	22 27       	eor	r18, r18
 40e:	b0 0d       	add	r27, r0
 410:	a1 1d       	adc	r26, r1
 412:	62 1f       	adc	r22, r18
 414:	73 9f       	mul	r23, r19
 416:	b0 0d       	add	r27, r0
 418:	a1 1d       	adc	r26, r1
 41a:	62 1f       	adc	r22, r18
 41c:	83 9f       	mul	r24, r19
 41e:	a0 0d       	add	r26, r0
 420:	61 1d       	adc	r22, r1
 422:	22 1f       	adc	r18, r18
 424:	74 9f       	mul	r23, r20
 426:	33 27       	eor	r19, r19
 428:	a0 0d       	add	r26, r0
 42a:	61 1d       	adc	r22, r1
 42c:	23 1f       	adc	r18, r19
 42e:	84 9f       	mul	r24, r20
 430:	60 0d       	add	r22, r0
 432:	21 1d       	adc	r18, r1
 434:	82 2f       	mov	r24, r18
 436:	76 2f       	mov	r23, r22
 438:	6a 2f       	mov	r22, r26
 43a:	11 24       	eor	r1, r1
 43c:	9f 57       	subi	r25, 0x7F	; 127
 43e:	50 40       	sbci	r21, 0x00	; 0
 440:	9a f0       	brmi	.+38     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 442:	f1 f0       	breq	.+60     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 444:	88 23       	and	r24, r24
 446:	4a f0       	brmi	.+18     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 448:	ee 0f       	add	r30, r30
 44a:	ff 1f       	adc	r31, r31
 44c:	bb 1f       	adc	r27, r27
 44e:	66 1f       	adc	r22, r22
 450:	77 1f       	adc	r23, r23
 452:	88 1f       	adc	r24, r24
 454:	91 50       	subi	r25, 0x01	; 1
 456:	50 40       	sbci	r21, 0x00	; 0
 458:	a9 f7       	brne	.-22     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 45a:	9e 3f       	cpi	r25, 0xFE	; 254
 45c:	51 05       	cpc	r21, r1
 45e:	80 f0       	brcs	.+32     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 460:	0c 94 89 01 	jmp	0x312	; 0x312 <__fp_inf>
 464:	0c 94 d4 01 	jmp	0x3a8	; 0x3a8 <__fp_szero>
 468:	5f 3f       	cpi	r21, 0xFF	; 255
 46a:	e4 f3       	brlt	.-8      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 46c:	98 3e       	cpi	r25, 0xE8	; 232
 46e:	d4 f3       	brlt	.-12     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 470:	86 95       	lsr	r24
 472:	77 95       	ror	r23
 474:	67 95       	ror	r22
 476:	b7 95       	ror	r27
 478:	f7 95       	ror	r31
 47a:	e7 95       	ror	r30
 47c:	9f 5f       	subi	r25, 0xFF	; 255
 47e:	c1 f7       	brne	.-16     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 480:	fe 2b       	or	r31, r30
 482:	88 0f       	add	r24, r24
 484:	91 1d       	adc	r25, r1
 486:	96 95       	lsr	r25
 488:	87 95       	ror	r24
 48a:	97 f9       	bld	r25, 7
 48c:	08 95       	ret

0000048e <_exit>:
 48e:	f8 94       	cli

00000490 <__stop_program>:
 490:	ff cf       	rjmp	.-2      	; 0x490 <__stop_program>
